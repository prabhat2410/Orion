stages:
- name: build
  steps:
  - publishImageConfig:
      dockerfilePath: docker/Dockerfile
      buildContext: .
      tag: fiware-orion-devops-image
      pushRemote: true
      registry: 192.168.100.176:5000
    env:
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_STORAGE_PATH: /var/lib/docker2
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: deploy
  steps:
  - applyYamlConfig:
      path: ./deployment.yaml
- name: test
  steps:
  - applyYamlConfig:
      path: Postman/Postman.yaml
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: test_demo
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: echo "Hello world !!"
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: jmeter test
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: |
        #!/bin/bash
        #Script created to launch Jmeter tests directly from the current terminal without accessing the jmeter master pod.
        #It requires that you supply the path to the jmx file
        #After execution, test script jmx file may be deleted from the pod itself but not locally.

        working_dir="`pwd`"

        #Get namesapce variable
        #tenant=`awk '{print $NF}' "$working_dir/tenant_export"`
        tenent="jmeter"
        echo "PWD"
        echo "`pwd`"

        jmx=/jmeter/apache-jmeter-5.0/bin/Orion-new.jmx
        #[ -n "$jmx" ] || read -p 'Enter path to the jmx file ' jmx

        echo "$jmx"
        if [ ! -f "$jmx" ];
        then
            echo "Test script file was not found in PATH"
            echo "Kindly check and input the correct file path"
            exit
        fi

        test_name="$(basename "$jmx")"

        #Get Master pod details

        master_pod=`kubectl get po -n $tenant | grep jmeter-master | awk '{print $1}'`

        kubectl cp "$jmx" -n $tenant "$master_pod:/$test_name"

        ## Echo Starting Jmeter load test

        kubectl exec -ti -n $tenant $master_pod -- /bin/bash / "$test_name"
timeout: 60
notification: {}
