stages:
- name: build
  steps:
  - publishImageConfig:
      dockerfilePath: docker/Dockerfile
      buildContext: .
      tag: fiware-orion:${CICD_EXECUTION_SEQUENCE}
      pushRemote: true
      registry: 10.0.8.61:31484
    env:
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_STORAGE_PATH: /var/lib/docker2
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: Test_postman
  steps:
  - applyYamlConfig:
      path: Postman/Postman.yaml
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
  - runScriptConfig:
      image: python:latest
      shellScript: "apt-get update\napt-get install sshpass \n\n\n\n\n\n\n\n\n\nsshpass
        -p mehant ssh -tt -o StrictHostKeyChecking=no mehant@192.168.100.178 << EOF\n\nkubectl
        --kubeconfig=config-176 get pods -n updateandrollback | grep \"api-test\"
        | cut -d \" \" -f1 |head -1\n\nkubectl --kubeconfig=config-176 logs $api_test_pod
        -n updateandrollback > /home/mehant/Test_Reports/postman_report__$(date \"+%Y.%m.%d-%H.%M.%S\")\n\nEOF\n\n\n"
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: demo_test
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: echo "hello world"
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: jmeter
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: |+
        #! /usr/bin/env python
        import os,subprocess
        _rc0 = subprocess.call(["gpt-get","update"],shell=True)
        _rc0 = subprocess.call(["apt-get","install","sshpass"],shell=True)
        _rc0 = subprocess.Popen("sshpass" + " " + "-p" + " " + "mehant" + " " + "ssh" + " " + "-tt" + " " + "-o" + " " + "StrictHostKeyChecking=no" + " " + "mehant@192.168.100.178",shell=True,stdin=subprocess.PIPE)
        _rc0.communicate("\nsleep 30\n\nmaster_pod="+os.popen("kubectl --kubeconfig=config-176 get po -n jmeter | grep jmeter-master | cut -d " " -f 1").read().rstrip("\n")+"\necho "+str(master_pod.val)+"\n\nkubectl --kubeconfig=config-176 exec -ti -n jmeter "+str(master_pod.val)+" -- /bin/bash  /jmeter/apache-jmeter-5.0/bin/jmeter -n -t /jmeter/apache-jmeter-5.0/bin/Orion-new_test.jmx\n\n")
        _rc0 = _rc0.wait()print '''

        sleep 30

        master_pod=`kubectl --kubeconfig=config-176 get po -n jmeter | grep jmeter-master | cut -d " " -f 1`
        echo $master_pod

        kubectl --kubeconfig=config-176 exec -ti -n jmeter $master_pod -- /bin/bash  /jmeter/apache-jmeter-5.0/bin/jmeter -n -t /jmeter/apache-jmeter-5.0/bin/Orion-new_test.jmx

        '''

    when:
      branch: {}
      event: {}
timeout: 60
notification: {}
