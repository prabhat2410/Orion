stages:
- name: build
  steps:
  - publishImageConfig:
      dockerfilePath: docker/Dockerfile
      buildContext: .
      tag: fiware-orion
      pushRemote: true
      registry: 192.168.100.176:5000
    env:
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_STORAGE_PATH: /var/lib/docker2
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
  - runScriptConfig:
      image: java:8
      shellScript: |-
        echo "abc" >> abc.txt
        cat abc.txt
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
- name: deploy
  steps:
  - applyYamlConfig:
      path: ./deployment.yaml
- name: JmeterOrionTest
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: "#!/bin/bash\n#Get namesapce variable\n#tenant=`awk '{print $NF}'
        \"$working_dir/tenant_export\"`\n\necho \"Host is `hostname -I`\"\n`pwd`\n`ls`\n\n#ssh-keygen
        -t rsa -R hostname -f /root  \n#ssh -tt centos@192.168.100.176\n\ntenent=\"jmeter\"\necho
        \"PWD\"\necho \"`pwd`\"\n\njmx=\"/jmeter/apache-jmeter-5.0/bin/scriptOrion.jmx\"\n#[
        -n \"$jmx\" ] || read -p 'Enter path to the jmx file ' jmx\n\nif [ ! -f \"$jmx\"
        ];\nthen\n    echo \"Test script file was not found in PATH\"\n    echo \"Kindly
        check and input the correct file path\"\n    exit\nfi\n\ntest_name=\"scriptOrion.jmx\"\n\n#Get
        Master pod details\n\nmaster_pod=`kubectl --kubeconfig=176-config get po -n
        $tenant | grep jmeter-master | awk '{print $1}'`\n\nkubectl cp \"$jmx\" -n
        $tenant \"$master_pod:/$test_name\"\n\n## Echo Starting Jmeter load test\n\nkubectl
        --kubeconfig=176-config exec -ti -n $tenant $master_pod -- /bin/bash /jmeter/apache-jmeter-5.0/bin/jmeter
        -n -t \"$test_name\"\n"
timeout: 60
notification: {}
