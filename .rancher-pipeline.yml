stages:
- name: build
  steps:
  - publishImageConfig:
      dockerfilePath: docker/Dockerfile
      buildContext: .
      tag: fiware-orion:${CICD_EXECUTION_SEQUENCE}
      pushRemote: true
      registry: 10.0.8.61:31484
    env:
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_STORAGE_PATH: /var/lib/docker2
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: Test_postman
  steps:
  - applyYamlConfig:
      path: Postman/Postman.yaml
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
  - runScriptConfig:
      image: python:latest
      shellScript: "apt-get update\napt-get install sshpass \n\n\n\n\n\n\n\n\n\nsshpass
        -p mehant ssh -tt -o StrictHostKeyChecking=no mehant@192.168.100.178 << EOF\n\n\n\ndir=`pwd`\n\necho
        \"Dir = ${dir}\"\n\npod_name=`kubectl --kubeconfig=config-176 get pods -n
        updateandrollback |grep \"api-test\" |cut -d \" \" -f1|head -n1`\n\necho \"Pod
        anme = ${pod_name}\"\n\n\nEOF\n\n\n"
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: demo_test
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: echo "hello world"
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: jmeter
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: |
        #!/usr/local/bin/ python
        import subprocess, os
        import time
        #rc1 = subprocess.Popen('sudo yum update', shell=True)
        #rc2 = subprocess.Popen('sudo yum install sshpass', shell=True)

        rc3 = subprocess.Popen('sshpass -p mehant ssh -tt -o StrictHostKeyChecking=no mehant@192.168.100.178', shell=True, stdout=subprocess.PIPE, stderr=open(os.devnull, 'w'))
        print "192.168.100.178"
        #time.sleep(30)

        master_pod = os.popen('kubectl --kubeconfig=config-176 get po -n jmeter | grep jmeter-master | cut -d " " -f 1 | head -n 1').read().rstrip("\n")
        print master_pod

        cmd = "kubectl --kubeconfig=config-176 exec -ti -n jmeter " + master_pod + " -- /bin/bash  /jmeter/apache-jmeter-5.0/bin/jmeter -n -t /jmeter/apache-jmeter-5.0/bin/Orion-new_test.jmx"
        print cmd

        os.system(cmd)

        print "done"
    when:
      branch: {}
      event: {}
timeout: 60
notification: {}
