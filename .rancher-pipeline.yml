stages:
- name: build
  steps:
  - publishImageConfig:
      dockerfilePath: docker/Dockerfile
      buildContext: .
      tag: fiware-orion
      pushRemote: true
      registry: 10.0.8.61:31484
    env:
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_STORAGE_PATH: /var/lib/docker2
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: deploy
  steps:
  - applyYamlConfig:
      path: ./deployment.yaml
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: Postman test
  steps:
  - applyYamlConfig:
      path: Postman/Postman.yaml
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: test_demo
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: |
        echo "Hello world !!"
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
- name: jmeter test
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: "apt-get update\napt-get install sshpass\n\n#!/bin/bash\n#Script
        created to launch Jmeter tests directly from the current terminal without
        accessing the jmeter master pod.\n#It requires that you supply the path to
        the jmx file\n#After execution, test script jmx file may be deleted from the
        pod itself but not locally.\n\nsshpass -p mehant ssh -tt -o StrictHostKeyChecking=no
        mehant@192.168.100.178 <<EOF\nls;\nworking_dir=\"`pwd`\"\n\n#Get namesapce
        variable\n#tenant=`awk '{print $NF}' \"$working_dir/tenant_export\"`\ntenent=\"jmeter\"\necho
        \"PWD\"\necho \"`pwd`\"\n\njmx=\"/jmeter/apache-jmeter-5.0/bin/Orion-new.jmx\"\n#if
        [ -n \"$jmx\" ] \n#\tread -p 'Enter path to the jmx file ' \n#fi\n\nif [ !
        -f \"$jmx\" ];\nthen\n    echo \"Test script file was not found in PATH\"\n
        \   echo \"Kindly check and input the correct file path\"\n   exit\nfi\n\ntest_name=\"$(basename
        \"$jmx\")\"\n\n#Get Master pod details\n\nmaster_pod=`kubectl --kubeconfig=config-176
        get po -n $tenant | grep jmeter-master | awk '{print $1}'`\n\nkubectl --kubeconfig=config-176
        cp \"$jmx\" -n $tenant \"$master_pod:/$test_name\"\n\n## Echo Starting Jmeter
        load test\n\nkubectl --kubeconfig=config-176 exec -ti -n $tenant $master_pod
        -- /bin/bash / \"$test_name\"\n\n"
    when:
      branch: {}
      event: {}
timeout: 60
notification: {}
