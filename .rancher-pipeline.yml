stages:
- name: build
  steps:
  - publishImageConfig:
      dockerfilePath: docker/Dockerfile
      buildContext: .
      tag: fiware-orion:${CICD_EXECUTION_SEQUENCE}
      pushRemote: true
      registry: 10.0.8.61:31484
    env:
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_STORAGE_PATH: /var/lib/docker2
    when:
      branch: {}
      event:
        include:
        - pull_request
        - push
        - tag
  when:
    event:
      include:
      - pull_request
      - push
      - tag
- name: Test_postman
  steps:
  - applyYamlConfig:
      path: Postman/Postman.yaml
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
  - runScriptConfig:
      image: python:latest
      shellScript: "apt-get update\napt-get install sshpass \n\n\n\n\n\n\n\n\n\nsshpass
        -p mehant ssh -tt -o StrictHostKeyChecking=no mehant@192.168.100.178 << EOF\n\n\n\ndir=`pwd`\n\necho
        \"Dir = ${dir}\"\n\npod_name=`kubectl --kubeconfig=config-176 get pods -n
        updateandrollback |grep \"api-test\" |cut -d \" \" -f1|head -n1`\n\necho \"Pod
        anme = ${pod_name}\"\n\n\nEOF\n\n\n"
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
  when:
    event:
      include:
      - pull_request
      - push
      - tag
- name: demo_test
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: echo "hello world"
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
  when:
    event:
      include:
      - pull_request
      - push
      - tag
- name: jmeter
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: "ls /usr/local/bin |grep env\n\n#!/usr/local/bin/env python\nimport
        subprocess, os\nimport time\nrc1 = subprocess.Popen('sudo yum update', shell=True)\nrc2
        = subprocess.Popen('sudo yum install sshpass', shell=True)\napt-get update\n\napt-get
        install sshpass\n\nsshpass -p mehant ssh -tt -o StrictHostKeyChecking=no mehant@192.168.100.178
        <<EOF\n\nrc3 = subprocess.Popen('sshpass -p mehant ssh -tt -o StrictHostKeyChecking=no
        mehant@192.168.100.178', shell=True, stdout=subprocess.PIPE, stderr=open(os.devnull,
        'w'))\nprint \"192.168.100.178\"\ntime.sleep(30)\n\nmaster_pod = os.popen('kubectl
        --kubeconfig=config-176 get po -n jmeter | grep jmeter-master | cut -d \"
        \" -f 1 | head -n 1').read().rstrip(\"\\n\")\nprint master_pod\n\ncmd = kubectl
        --kubeconfig=config-176 exec -ti -n jmeter jmeter-master-7774f59cb4-9xqfk
        -- /bin/bash  /jmeter/apache-jmeter-5.0/bin/jmeter -n -t /jmeter/apache-jmeter-5.0/bin/Orion-new_test.jmx\nprint
        cmd\n\nos.system(cmd)\n\nprint \"done\"\nsys.exit(1) "
    when:
      branch: {}
      event: {}
  when:
    event: {}
- name: testing pipeline fail
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: sys.exit(-1)
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
  when:
    event:
      include:
      - pull_request
      - push
      - tag
timeout: 60
notification: {}
