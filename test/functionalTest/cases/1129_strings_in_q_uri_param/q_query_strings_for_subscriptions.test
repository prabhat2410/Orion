# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Strings in q URI Param

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create E1 with a String attribute S == '123'
# 02. Create E2 with a Number attribute S == 123
# 03. Create subscription with q=S:121,122,123
# 04. Dump accumulator, see E2
# 05. Create subscription with q=S:'121','122','123'
# 06. Dump accumulator, see E1
# 07. Update E1/S to '121'
# 08. Dump accumulator, see E1
# 09. Update E2/S to 121
# 10. Dump accumulator, see E2
#

echo "01. Create E1 with a String attribute S == '123'"
echo "================================================"
payload='{
  "id": "E1",
  "S": "123"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "02. Create E2 with a Number attribute S == 123"
echo "=============================================="
payload='{
  "id": "E2",
  "S": 123
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "03. Create subscription with q=S:121,122,123"
echo "============================================"
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "S:121,122,123"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "04. Dump accumulator, see E2"
echo "============================"
accumulatorDump
accumulatorReset
echo
echo



echo "05. Create subscription with q=S:'121','122','123'"
echo "=================================================="
filter="'121','122','123'"
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "S:'$filter'"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "06. Dump accumulator, see E1"
echo "============================"
accumulatorDump
accumulatorReset
echo
echo


echo "07. Update E1/S to '121'"
echo "========================"
payload='{
  "S": "121"
}'
orionCurl --url /v2/entities/E1/attrs?options=keyValues --payload "$payload" -X PATCH
echo
echo


echo "08. Dump accumulator, see E1"
echo "============================"
accumulatorDump
accumulatorReset
echo
echo


echo "09. Update E2/S to 121"
echo "======================"
payload='{
  "S": 121
}'
orionCurl --url /v2/entities/E2/attrs?options=keyValues --payload "$payload" -X PATCH
echo
echo


echo "10. Dump accumulator, see E2"
echo "============================"
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create E1 with a String attribute S == '123'
================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create E2 with a Number attribute S == 123
==============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create subscription with q=S:121,122,123
============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Dump accumulator, see E2
============================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 129
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "S": {
                "metadata": {},
                "type": "Number",
                "value": 123
            },
            "id": "E2",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


05. Create subscription with q=S:'121','122','123'
==================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Dump accumulator, see E1
============================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 129
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "S": {
                "metadata": {},
                "type": "Text",
                "value": "123"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


07. Update E1/S to '121'
========================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. Dump accumulator, see E1
============================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 129
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "S": {
                "metadata": {},
                "type": "Text",
                "value": "121"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


09. Update E2/S to 121
======================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



10. Dump accumulator, see E2
============================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 129
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "S": {
                "metadata": {},
                "type": "Number",
                "value": 121
            },
            "id": "E2",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
    
