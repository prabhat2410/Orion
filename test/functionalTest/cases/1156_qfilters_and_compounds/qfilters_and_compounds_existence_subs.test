# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
String filters for compound values of attributes: existence in subscriptions

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create E1 with A1 with compound value, including i==10 and s='test_string'
# 02. Create subscription 1 for q=A1.i - notification
# 03. Dump and reset accumulator, see one notification
# 04. Create subscription 2 for q=A1.i2 - no notification
# 05. Dump accumulator, see no notification
# 06. Create subscription 3 for q=A2.i - no notification
# 07. Dump accumulator, see no notification
# 08. Create subscription 4 for q=!A1.i2 - notification
# 09. Dump and reset accumulator, see one notification
# 10. Create subscription 5 for q=!A1.i - no notification
# 11. Dump accumulator, see no notification
# 12. Create subscription 6 for q=!A2.i - notification
# 13. Dump and reset accumulator, see one notification
# 14. Update E1, to provoke another 3 notifications
# 15. Dump and reset accumulator, see three notifications
#

echo "01. Create E1 with A1 with compound value, including i==10 and s='test_string'"
echo "=============================================================================="
payload='{
  "id": "E1",
  "A1": {
    "value": {
      "i": 10,
      "s": "test_string"
    }
  }
}'
orionCurl --url /v2/entities --payload "${payload}"
echo
echo


echo "02. Create subscription 1 for q=A1.i - notification"
echo "==================================================="
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "A1.i"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "03. Dump and reset accumulator, see one notification"
echo "===================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "04. Create subscription 2 for q=A1.i2 - no notification"
echo "======================================================="
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "A1.i2"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "05. Dump accumulator, see no notification"
echo "========================================="
accumulatorDump
echo
echo


echo "06. Create subscription 3 for q=A2.i - no notification"
echo "======================================================"
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "A2.i"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "07. Dump accumulator, see no notification"
echo "========================================="
accumulatorDump
echo
echo


echo "08. Create subscription 4 for q=!A1.i2 - notification"
echo "====================================================="
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "!A1.i2"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "09. Dump and reset accumulator, see one notification"
echo "===================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "10. Create subscription 5 for q=!A1.i - no notification"
echo "======================================================="
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "!A1.i"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "11. Dump accumulator, see no notification"
echo "========================================="
accumulatorDump
echo
echo


echo "12. Create subscription 6 for q=!A2.i - notification"
echo "===================================================="
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "!A2.i"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "13. Dump and reset accumulator, see one notification"
echo "===================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "14. Update E1, to provoke another 3 notifications"
echo "================================================="
payload='{
  "A1": {
    "value": {
      "i": 11,
      "s": "test_string2"
    }
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X PATCH
echo
echo

echo "15. Dump and reset accumulator, see three notifications"
echo "======================================================="
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create E1 with A1 with compound value, including i==10 and s='test_string'
==============================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create subscription 1 for q=A1.i - notification
===================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Dump and reset accumulator, see one notification
====================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 162
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "i": 10, 
                    "s": "test_string"
                }
            }, 
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


04. Create subscription 2 for q=A1.i2 - no notification
=======================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Dump accumulator, see no notification
=========================================


06. Create subscription 3 for q=A2.i - no notification
======================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. Dump accumulator, see no notification
=========================================


08. Create subscription 4 for q=!A1.i2 - notification
=====================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



09. Dump and reset accumulator, see one notification
====================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 162
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "i": 10, 
                    "s": "test_string"
                }
            }, 
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


10. Create subscription 5 for q=!A1.i - no notification
=======================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



11. Dump accumulator, see no notification
=========================================


12. Create subscription 6 for q=!A2.i - notification
====================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



13. Dump and reset accumulator, see one notification
====================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 162
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "i": 10, 
                    "s": "test_string"
                }
            }, 
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


14. Update E1, to provoke another 3 notifications
=================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



15. Dump and reset accumulator, see three notifications
=======================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 163
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "i": 11, 
                    "s": "test_string2"
                }
            }, 
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 163
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "i": 11, 
                    "s": "test_string2"
                }
            }, 
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 163
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "i": 11, 
                    "s": "test_string2"
                }
            }, 
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
