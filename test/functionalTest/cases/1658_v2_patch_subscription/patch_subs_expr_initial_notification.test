# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
PATCH Subscriptions V2 q expression in initial notification

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Subscribe: without expresion
# 02. Create E1 temperature=20, humidity=80
# 03. Create E2 temperature=30, humidity=70
# 04. Create E3 temperature=40, humidity=60
# 05. Create E4 temperature=50, humidity=50
# 06. Create E5 temperature=60, humidity=40
# 07. Update subscription: q=temperature<60;humidity==61..83
# 08. Dump accumulator (1 notification with E1+E2)
#

echo "01. Subscribe: without expresion"
echo "================================"
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*",
                "type": "foo"
            }
        ],
        "condition": {
            "attrs": [ ]
         }
    },
    "notification": {
        "http": {
            "url": "http://localhost:'$LISTENER_PORT'/notify"
        },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo

idSubscription=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "02. Create E1 temperature=20, humidity=80"
echo "========================================="
payload='{
  "id": "E1",
  "type": "T",
  "temperature": 20,
  "humidity": 80,
  "status": "OK"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "03. Create E2 temperature=30, humidity=70"
echo "========================================="
payload='{
  "id": "E2",
  "type": "T",
  "temperature": 30,
  "humidity": 70,
  "status": "ERR"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "04. Create E3 temperature=40, humidity=60"
echo "========================================="
payload='{
  "id": "E3",
  "type": "T",
  "temperature": 40,
  "humidity": 60,
  "status": "OK"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "05. Create E4 temperature=50, humidity=50"
echo "========================================="
payload='{
  "id": "E4",
  "type": "T",
  "temperature": 50,
  "humidity": 50,
  "status": "ERR"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "06. Create E5 temperature=60, humidity=40"
echo "========================================="
payload='{
  "id": "E5",
  "type": "T",
  "temperature": 60,
  "humidity": 40,
  "status": "OK"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "07. Update subscription: q=temperature<60;humidity==61..83"
echo "=========================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "temperature<60;humidity==61..83"
            }
         }
    }
}
'
orionCurl --url /v2/subscriptions/${idSubscription} --payload "$payload" -X PATCH
echo
echo


echo "08. Dump accumulator (1 notification with E1+E2)"
echo "================================================"
accumulatorDump
echo
echo


--REGEXPECT--
01. Subscribe: without expresion
================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create E1 temperature=20, humidity=80
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create E2 temperature=30, humidity=70
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Create E3 temperature=40, humidity=60
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Create E4 temperature=50, humidity=50
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E4?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Create E5 temperature=60, humidity=40
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E5?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. Update subscription: q=temperature<60;humidity==61..83
==========================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. Dump accumulator (1 notification with E1+E2)
================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 427
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "humidity": {
                "metadata": {}, 
                "type": "Number", 
                "value": 80
            }, 
            "id": "E1", 
            "status": {
                "metadata": {}, 
                "type": "Text", 
                "value": "OK"
            }, 
            "temperature": {
                "metadata": {}, 
                "type": "Number", 
                "value": 20
            }, 
            "type": "T"
        }, 
        {
            "humidity": {
                "metadata": {}, 
                "type": "Number", 
                "value": 70
            }, 
            "id": "E2", 
            "status": {
                "metadata": {}, 
                "type": "Text", 
                "value": "ERR"
            }, 
            "temperature": {
                "metadata": {}, 
                "type": "Number", 
                "value": 30
            }, 
            "type": "T"
        }
    ], 
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB

